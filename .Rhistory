R version 4.4.0 (2024-04-24 ucrt) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### HCUP NASS 2020 Data Analysis
> ### Author: SgtKlinger
> ### Date: 2025-02-10
> 
> ### Description: This script loads and cleans the
> # HCUP NASS 2020 data, performs a linear mixed model
> # analysis, and generates various plots and summary statistics.
> 
> 
> # List of required packages
> required_packages <- 
+   c("data.table", "lme4", "ggplot2", "sjPlot", "dplyr", "haven")
> 
> # Function to check and install missing packages
> install_if_missing <- function(packages) {
+   new_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
+   if(length(new_packages)) install.packages(new_packages)
+ }
> 
> # Function to load all required libraries
> load_libraries <- function(packages) {
+   lapply(packages, library, character.only = TRUE)
+ }
> 
> # Check and install missing packages, then load packages
> install_if_missing(required_packages)
> load_libraries(required_packages)
data.table 1.15.4 using 4 threads (see ?getDTthreads).  Latest news: r-datatable.com
Loading required package: Matrix

Attaching package: ‘dplyr’

The following objects are masked from ‘package:data.table’:

    between, first, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

[[1]]
[1] "data.table" "stats"      "graphics"   "grDevices"  "utils"      "datasets"   "methods"    "base"      

[[2]]
 [1] "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices"  "utils"      "datasets"   "methods"    "base"      

[[3]]
 [1] "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices"  "utils"      "datasets"   "methods"   
[11] "base"      

[[4]]
 [1] "sjPlot"     "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices"  "utils"      "datasets"  
[11] "methods"    "base"      

[[5]]
 [1] "dplyr"      "sjPlot"     "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices"  "utils"     
[11] "datasets"   "methods"    "base"      

[[6]]
 [1] "haven"      "dplyr"      "sjPlot"     "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices" 
[11] "utils"      "datasets"   "methods"    "base"      

Warning messages:
1: package ‘ggplot2’ was built under R version 4.4.2 
2: package ‘sjPlot’ was built under R version 4.4.2 
> rm(required_packages, install_if_missing, load_libraries)
> 
> # Function to read and define columns using HCUP NASS specification files
> define_columns <- function(data, spec_filename) {
+   spec_file <- file.path(getwd(), spec_filename)
+   spec_lines <- readLines(spec_file)
+   column_info <- spec_lines[grep("NASS 2020", spec_lines)]
+   column_names <- sapply(column_info, function(x) 
+     trimws(paste(strsplit(x, "")[[1]][25:43], collapse = "")))
+   colnames(data) <- column_names
+   rm(spec_file, spec_lines, column_info, column_names)
+   return(data)
+ }
> 
> # Import the datasets using data.table's fread function
> HOSPITALS <- fread(file.path(getwd(), "NASS_2020_Hospital.csv"))
> ENCOUNTERS <- fread(file.path(getwd(), "NASS_2020_Encounter.csv"))
|--------------------------------------------------|
|==================================================|
|--------------------------------------------------|
|==================================================|
> COMORBIDITES <- fread(file.path(getwd(), "NASS_2020_DX_PR_GRPS.csv"))
|--------------------------------------------------|
|==================================================|
> 
> # Define columns for each dataset using their respective specification files
> HOSPITALS <- define_columns(HOSPITALS, "FileSpecifications_NASS_2020_Hospital.txt")
> ENCOUNTERS <- define_columns(ENCOUNTERS, "FileSpecifications_NASS_2020_Encounter.txt")
> COMORBIDITES <- define_columns(COMORBIDITES, "FileSpecifications_NASS_2020_DX_PR_GRPS.txt")
> rm(define_columns)
> 
> # Cross-reference the first two datasets by Hospital ID (HOSP_NASS)
> # Then the third dataset by Patient ID (KEY_NASS)
> merged1 <- merge(HOSPITALS, ENCOUNTERS, by = "HOSP_NASS")
> rm(HOSPITALS, ENCOUNTERS)
> merged_all <- merge(merged1, COMORBIDITES, by = "KEY_NASS")
> rm(merged1, COMORBIDITES)
> 
> # Convert the merged data to a data.table for easier manipulation
> # remove unnecessary functions/data, clean memory again
> gc()
             used    (Mb) gc trigger    (Mb)   max used    (Mb)
Ncells    2378881   127.1    4234957   226.2    4234957   226.2
Vcells 2783740414 21238.3 6906672628 52693.8 5825278236 44443.4
> NASS_2020_all <- as.data.table(merged_all)
> rm(merged_all)
> gc()
             used    (Mb) gc trigger    (Mb)   max used    (Mb)
Ncells    2379654   127.1    4234957   226.2    4234957   226.2
Vcells 2783762657 21238.5 6906672628 52693.8 5825278236 44443.4
> 
> # Remove duplicate columns created by merging
> cols_to_remove <- grep("\\.y$", names(NASS_2020_all), value = TRUE)
> NASS_2020_all[, (cols_to_remove) := NULL]
> rm(cols_to_remove)
> 
> # Remove .x suffix from column names
> new_colnames <- gsub("\\.x$", "", names(NASS_2020_all))
> setnames(NASS_2020_all, old = names(NASS_2020_all), new = new_colnames)
> rm(new_colnames)
> gc()
             used    (Mb) gc trigger    (Mb)   max used    (Mb)
Ncells    2381586   127.2    4234957   226.2    4234957   226.2
Vcells 2764170615 21089.0 6906672628 52693.8 5825278236 44443.4
> 
> # convert all but a few columns to factor (categorical) variables
> # define Age groups
> NASS_2020_all$DISCWT <- as.numeric(NASS_2020_all$DISCWT)
> cols_to_factor <- setdiff(names(NASS_2020_all), c("AGE", "DISCWT", "TOTCHG","TOTAL_AS_ENCOUNTERS"))
> NASS_2020_all[, (cols_to_factor) := lapply(.SD, as.factor), .SDcols = cols_to_factor]
> rm(cols_to_factor)
> NASS_2020_all$AGEGRP <- cut(NASS_2020_all$AGE, breaks = c(0, 18, 40, 55, 65, 70, 80, Inf), labels = c("0-17", "18-39", "40-54", "55-64", "65-69", "70-79", "80+"), right = FALSE)
> NASS_2020_all$AGEGRP <- as.factor(NASS_2020_all$AGEGRP)
> gc()
             used    (Mb) gc trigger    (Mb)   max used    (Mb)
Ncells   10219693   545.8   26229852  1400.9   10507432   561.2
Vcells 2678491555 20435.3 6906672628 52693.8 6906507689 52692.5
> 
> # Create subset data.table of NASS_2020_all for analysis
> subset_65_50_NASS_2020 <- NASS_2020_all[
+   TOTCHG > 1000 & TOTCHG < 1000000 & AGE > 64 & CPTCCS1 %in% names(sort(table(CPTCCS1), decreasing = TRUE)[1:50]),
+   .SD, .SDcols = 1:132]
> gc()
             used    (Mb) gc trigger    (Mb)   max used    (Mb)
Ncells   10221106   545.9   26229852  1400.9   10507432   561.2
Vcells 2840493777 21671.3 6906672628 52693.8 6906507689 52692.5
> ### HCUP NASS 2020 Data Analysis
> ### Author: SgtKlinger
> ### Date: 2025-02-10
> 
> ### Description: This script loads and cleans the
> # HCUP NASS 2020 data, performs a linear mixed model
> # analysis, and generates various plots and summary statistics.
> 
> 
> # List of required packages
> required_packages <- 
+   c("data.table", "lme4", "ggplot2", "sjPlot", "dplyr", "haven")
> 
> # Function to check and install missing packages
> install_if_missing <- function(packages) {
+   new_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
+   if(length(new_packages)) install.packages(new_packages)
+ }
> 
> # Function to load all required libraries
> load_libraries <- function(packages) {
+   lapply(packages, library, character.only = TRUE)
+ }
> 
> # Check and install missing packages, then load packages
> install_if_missing(required_packages)
> load_libraries(required_packages)
[[1]]
 [1] "haven"      "dplyr"      "sjPlot"     "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices" 
[11] "utils"      "datasets"   "methods"    "base"      

[[2]]
 [1] "haven"      "dplyr"      "sjPlot"     "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices" 
[11] "utils"      "datasets"   "methods"    "base"      

[[3]]
 [1] "haven"      "dplyr"      "sjPlot"     "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices" 
[11] "utils"      "datasets"   "methods"    "base"      

[[4]]
 [1] "haven"      "dplyr"      "sjPlot"     "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices" 
[11] "utils"      "datasets"   "methods"    "base"      

[[5]]
 [1] "haven"      "dplyr"      "sjPlot"     "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices" 
[11] "utils"      "datasets"   "methods"    "base"      

[[6]]
 [1] "haven"      "dplyr"      "sjPlot"     "ggplot2"    "lme4"       "Matrix"     "data.table" "stats"      "graphics"   "grDevices" 
[11] "utils"      "datasets"   "methods"    "base"      

> rm(required_packages, install_if_missing, load_libraries)
> 
> # Function to read and define columns using HCUP NASS specification files
> define_columns <- function(data, spec_filename) {
+   spec_file <- file.path(getwd(), spec_filename)
+   spec_lines <- readLines(spec_file)
+   column_info <- spec_lines[grep("NASS 2020", spec_lines)]
+   column_names <- sapply(column_info, function(x) 
+     trimws(paste(strsplit(x, "")[[1]][25:43], collapse = "")))
+   colnames(data) <- column_names
+   rm(spec_file, spec_lines, column_info, column_names)
+   return(data)
+ }
> 
> # Import the datasets using data.table's fread function
> HOSPITALS <- fread(file.path(getwd(), "NASS_2020_Hospital.csv"))
> ENCOUNTERS <- fread(file.path(getwd(), "NASS_2020_Encounter.csv"))
|--------------------------------------------------|
|=======================================
> View(define_columns)
> rm(define_columns())
Error in rm(define_columns()) : 
  ... must contain names or character strings
> rm(define_columns
+ ")"
Error: unexpected string constant in:
"rm(define_columns
")""
> rm(define_columns)
> gc()
             used    (Mb) gc trigger    (Mb)   max used    (Mb)
Ncells   10608291   566.6   26229852  1400.9   15358187   820.3
Vcells 2841373178 21678.0 6906672628 52693.8 6906507689 52692.5
> gc()
             used    (Mb) gc trigger    (Mb)   max used    (Mb)
Ncells   10608151   566.6   26229852  1400.9   15358187   820.3
Vcells 2841349471 21677.8 6906672628 52693.8 6906507689 52692.5
> # Fit the linear mixed models
> model <- 
+     lmer(TOTCHG ~ CPTCCS1 + (1 | HOSP_NASS), 
+          data = subset_65_50_NASS_2020, weights = DISCWT)
> 
> # Print the summary of the model
> summary(model)
Linear mixed model fit by REML ['lmerMod']
Formula: TOTCHG ~ CPTCCS1 + (1 | HOSP_NASS)
   Data: subset_65_50_NASS_2020
Weights: DISCWT

REML criterion at convergence: 57766751

Scaled residuals: 
    Min      1Q  Median      3Q     Max 
-7.1863 -0.3895 -0.0270  0.2367 30.9330 

Random effects:
 Groups    Name        Variance  Std.Dev.
 HOSP_NASS (Intercept) 368544032 19198   
 Residual              857414754 29282   
Number of obs: 2495043, groups:  HOSP_NASS, 2846

Fixed effects:
            Estimate Std. Error  t value
(Intercept)  42694.4      378.1  112.924
CPTCCS16    -29540.1      146.9 -201.123
CPTCCS19      9279.7      209.2   44.348
CPTCCS110    -8785.5      237.9  -36.934
CPTCCS115   -28665.6      119.0 -240.916
CPTCCS116   -19976.0      210.2  -95.044
CPTCCS119   -27869.2      171.3 -162.693
CPTCCS120   -24153.1      196.5 -122.891
CPTCCS121   -23558.5      401.2  -58.722
CPTCCS123   -31511.4      441.6  -71.354
CPTCCS128   -15400.4      339.9  -45.302
CPTCCS130   -22897.3      755.1  -30.324
CPTCCS133   -11436.0      190.4  -60.059
CPTCCS148    35587.3      128.4  277.132
CPTCCS157   -17140.3      157.9 -108.575
CPTCCS161    13355.1      140.1   95.315
CPTCCS167    -4165.4      171.8  -24.241
CPTCCS180    -7681.9      250.5  -30.664
CPTCCS184   -13867.1      144.1  -96.264
CPTCCS185   -15887.1      133.6 -118.945
CPTCCS186   -10184.3      151.6  -67.184
CPTCCS187   -17174.8      257.8  -66.615
CPTCCS196   -22722.2      352.3  -64.488
CPTCCS1101  -22829.5      140.7 -162.288
CPTCCS1106    1161.9      248.0    4.686
CPTCCS1113  -19160.6      162.8 -117.703
CPTCCS1118   -6574.5      205.4  -32.011
CPTCCS1119   -9382.8      323.1  -29.042
CPTCCS1124    5941.7      201.6   29.476
CPTCCS1129   -8883.7      213.4  -41.624
CPTCCS1132   -3158.6      251.9  -12.539
CPTCCS1142  -17827.6      193.8  -92.012
CPTCCS1143  -16124.6      192.0  -83.986
CPTCCS1145   -8034.5      185.3  -43.348
CPTCCS1147   -4376.2      200.7  -21.807
CPTCCS1148    -725.2      251.7   -2.881
CPTCCS1151  -25204.3      170.8 -147.565
CPTCCS1152   14515.8      125.4  115.726
CPTCCS1153   16348.7      142.5  114.755
CPTCCS1154    2529.3      224.5   11.267
CPTCCS1158   29800.0      212.5  140.208
CPTCCS1160  -18169.3      130.6 -139.173
CPTCCS1161  -15474.6      189.0  -81.879
CPTCCS1162   -7696.9      166.0  -46.373
CPTCCS1166  -16594.3      142.8 -116.184
CPTCCS1167    2081.5      204.9   10.160
CPTCCS1170  -28999.5      169.7 -170.908
CPTCCS1171  -31263.0      225.5 -138.655
CPTCCS1175    2977.6      183.2   16.255
CPTCCS1225   72998.7      152.7  477.923

Correlation matrix not shown by default, as p = 50 > 12.
Use print(x, correlation=TRUE)  or
    vcov(x)        if you need it

> 
> 
> 
> # Plot the fixed effects estimates with confidence intervals
> plot_model(model, type = "est", show.values = TRUE, value.offset = .3, ci.lvl = 0.95)
> 
> # Plot random effects with confidence intervals
> plot_model(model, type = "re", show.values = TRUE, ci.lvl = 0.95)
> # Create diagnostic plots
> # 1. Residuals vs Fitted with confidence interval
> ggplot(model, aes(.fitted, .resid)) +
+   geom_point() +
+   geom_smooth(method = "loess", se = TRUE) +
+   theme_minimal() +
+   labs(title = "Residuals vs Fitted")
Error in `fortify()`:
! `data` must be a <data.frame>, or an object coercible by `fortify()`, or a valid <data.frame>-like object coercible by
  `as.data.frame()`.
Caused by error in `.prevalidate_data_frame_like_object()`:
! `dim(data)` must return an <integer> of length 2.
Run `rlang::last_trace()` to see where the error occurred.
> # Plot the fixed effects estimates with confidence intervals
> plot_model(model, type = "est", ci.lvl = 0.95, sort.est = TRUE)
> 
> # Plot random effects with confidence intervals
> plot_model(model, type = "re", ci.lvl = 0.95, sort.est = TRUE)
Sorting each group of random effects ('sort.all') is not possible when 'facets = TRUE'.
> # Create diagnostic plots
> # 1. Residuals vs Fitted with confidence interval
> ggplot(model, aes(.fitted, .resid)) +
+   geom_point() +
+   geom_smooth(method = "loess", se = TRUE) +
+   theme_minimal() +
+   labs(title = "Residuals vs Fitted")
Error in `fortify()`:
! `data` must be a <data.frame>, or an object coercible by `fortify()`, or a valid <data.frame>-like object coercible by
  `as.data.frame()`.
Caused by error in `.prevalidate_data_frame_like_object()`:
! `dim(data)` must return an <integer> of length 2.
Run `rlang::last_trace()` to see where the error occurred.
> # Plot random effects with confidence intervals
> plot_model(model, type = "re", ci.lvl = 0.95, sort.est = TRUE)
Sorting each group of random effects ('sort.all') is not possible when 'facets = TRUE'.
> 
> # Generate diagnostic plots for the linear mixed model
> par(mfrow = c(2, 2))  # Set up a 2x2 plotting area
> 
> # Residuals vs Fitted
> plot(model, which = 1, main = "Residuals vs Fitted")
> 
> # Normal Q-Q plot
> qqnorm(resid(model), main = "Normal Q-Q")
> qqline(resid(model))
> 
> # Scale-Location plot
> plot(model, which = 3, main = "Scale-Location")
> 
> # Residuals vs Leverage
> plot(model, which = 5, main = "Residuals vs Leverage")
> 
> par(mfrow = c(1, 1))  # Reset to default plotting area
> View(weights)
> View(NASS_2020_all)
> 
> View(weights)
> View(weights)
> gc()
             used    (Mb) gc trigger    (Mb)   max used    (Mb)
Ncells   13660875   729.6   26229852  1400.9   26229852  1400.9
Vcells 3174953876 24223.0 6906672628 52693.8 6906507689 52692.5
> which(names(NASS_2020_all) == "CPTCCS1")
[1] 27
> colnames(subset_65_50_NASS_2020)
  [1] "KEY_NASS"            "HOSP_NASS"           "HOSP_TEACH"          "HOSP_LOCATION"       "HOSP_LOCTEACH"      
  [6] "HOSP_REGION"         "HOSP_BEDSIZE_CAT"    "DISCWT"              "NASS_STRATUM"        "N_DISC_U"           
 [11] "N_HOSP_U"            "S_DISC_U"            "S_HOSP_U"            "TOTAL_AS_ENCOUNTERS" "YEAR"               
 [16] "AGE"                 "FEMALE"              "PL_NCHS"             "ZIPINC_QRTL"         "AMONTH"             
 [21] "AWEEKEND"            "DQTR"                "PAY1"                "DISPUNIFORM"         "TOTCHG"             
 [26] "NCPT_INSCOPE"        "CPTCCS1"             "CPTCCS2"             "CPTCCS3"             "CPTCCS4"            
 [31] "CPTCCS5"             "CPTCCS6"             "CPTCCS7"             "CPTCCS8"             "CPTCCS9"            
 [36] "CPTCCS10"            "CPTCCS11"            "CPTCCS12"            "CPTCCS13"            "CPTCCS14"           
 [41] "CPTCCS15"            "CPTCCS16"            "CPTCCS17"            "CPTCCS18"            "CPTCCS19"           
 [46] "CPTCCS20"            "CPTCCS21"            "CPTCCS22"            "CPTCCS23"            "CPTCCS24"           
 [51] "CPTCCS25"            "CPTCCS26"            "CPTCCS27"            "CPTCCS28"            "CPTCCS29"           
 [56] "CPTCCS30"            "CPT1"                "CPT2"                "CPT3"                "CPT4"               
 [61] "CPT5"                "CPT6"                "CPT7"                "CPT8"                "CPT9"               
 [66] "CPT10"               "CPT11"               "CPT12"               "CPT13"               "CPT14"              
 [71] "CPT15"               "CPT16"               "CPT17"               "CPT18"               "CPT19"              
 [76] "CPT20"               "CPT21"               "CPT22"               "CPT23"               "CPT24"              
 [81] "CPT25"               "CPT26"               "CPT27"               "CPT28"               "CPT29"              
 [86] "CPT30"               "I10_NDX"             "I10_DX1"             "I10_DX2"             "I10_DX3"            
 [91] "I10_DX4"             "I10_DX5"             "I10_DX6"             "I10_DX7"             "I10_DX8"            
 [96] "I10_DX9"             "I10_DX10"            "I10_DX11"            "I10_DX12"            "I10_DX13"           
[101] "I10_DX14"            "I10_DX15"            "I10_DX16"            "I10_DX17"            "I10_DX18"           
[106] "I10_DX19"            "I10_DX20"            "RACE"                "I10_INJURY"          "I10_MULTINJURY"     
[111] "CMR_AIDS"            "CMR_ALCOHOL"         "CMR_AUTOIMMUNE"      "CMR_CANCER_LYMPH"    "CMR_CANCER_LEUK"    
[116] "CMR_CANCER_METS"     "CMR_CANCER_NSITU"    "CMR_CANCER_SOLID"    "CMR_DEMENTIA"        "CMR_DEPRESS"        
[121] "CMR_DIAB_UNCX"       "CMR_DIAB_CX"         "CMR_DRUG_ABUSE"      "CMR_HTN_CX"          "CMR_HTN_UNCX"       
[126] "CMR_LUNG_CHRONIC"    "CMR_OBESE"           "CMR_PERIVASC"        "CMR_THYROID_HYPO"    "CMR_THYROID_OTH"    
[131] "CMR_VERSION"         "DXCCSR_Default_DX1" 
> subset_65_50_NASS_2020[1:10]
    KEY_NASS HOSP_NASS HOSP_TEACH HOSP_LOCATION HOSP_LOCTEACH HOSP_REGION HOSP_BEDSIZE_CAT   DISCWT NASS_STRATUM N_DISC_U N_HOSP_U
      <fctr>    <fctr>     <fctr>        <fctr>        <fctr>      <fctr>           <fctr>    <num>       <fctr>   <fctr>   <fctr>
 1: 10000002     10031          1             1             3           1                3 1.288180           58   381183      100
 2: 10000005     10326          1             1             3           1                3 1.144370           33   658010       75
 3: 10000010     10402          1             1             3           1                2 1.273104           40   325943      137
 4: 10000012     10380          1             1             3           1                2 1.273104           40   325943      137
 5: 10000022     10082          0             1             2           1                2 1.859776           38    46173       27
 6: 10000023     10258          1             1             3           1                3 1.144370           33   658010       75
    S_DISC_U S_HOSP_U TOTAL_AS_ENCOUNTERS   YEAR   AGE FEMALE PL_NCHS ZIPINC_QRTL AMONTH AWEEKEND   DQTR   PAY1 DISPUNIFORM TOTCHG
      <fctr>   <fctr>               <int> <fctr> <int> <fctr>  <fctr>      <fctr> <fctr>   <fctr> <fctr> <fctr>      <fctr>  <int>
 1:   295908       79                2100   2020    65      1       3           4     10        0      4      1           1  47536
 2:   574998       63                5249   2020    66      1       2           4      7        0      3      3           1  17459
 3:   256022      105                1789   2020    76      0       3           3     -9        0      4      1          -9  77672
 4:   256022      105                3746   2020    79      0       2           3      8        0      3      1           1  21760
 5:    24827       17                1255   2020    71      1       3           3     -9        0      3      1          -9  47438
 6:   574998       63               10246   2020    84      0       2           4      7        0      3      3           1  14422
    NCPT_INSCOPE CPTCCS1 CPTCCS2 CPTCCS3 CPTCCS4 CPTCCS5 CPTCCS6 CPTCCS7 CPTCCS8 CPTCCS9 CPTCCS10 CPTCCS11 CPTCCS12 CPTCCS13 CPTCCS14
          <fctr>  <fctr>  <fctr>  <fctr>  <fctr>  <fctr>  <fctr>  <fctr>  <fctr>  <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>
 1:            1     152    -999    -999    -999    -999    -999    -999    -999    -999     -999     -999     -999     -999     -999
 2:            1     151    -999    -999    -999    -999    -999    -999    -999    -999     -999     -999     -999     -999     -999
 3:            2      85      86    -999    -999    -999    -999    -999    -999    -999     -999     -999     -999     -999     -999
 4:            1     101    -999    -999    -999    -999    -999    -999    -999    -999     -999     -999     -999     -999     -999
 5:            1      61    -999    -999    -999    -999    -999    -999    -999    -999     -999     -999     -999     -999     -999
 6:            1     101    -999    -999    -999    -999    -999    -999    -999    -999     -999     -999     -999     -999     -999
    CPTCCS15 CPTCCS16 CPTCCS17 CPTCCS18 CPTCCS19 CPTCCS20 CPTCCS21 CPTCCS22 CPTCCS23 CPTCCS24 CPTCCS25 CPTCCS26 CPTCCS27 CPTCCS28
      <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>
 1:     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999
 2:     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999
 3:     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999
 4:     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999
 5:     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999
 6:     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999     -999
    CPTCCS29 CPTCCS30   CPT1   CPT2   CPT3   CPT4   CPT5   CPT6   CPT7   CPT8   CPT9  CPT10  CPT11  CPT12  CPT13  CPT14  CPT15  CPT16
      <fctr>   <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr>
 1:     -999     -999  27447                                             <NA>          <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>
 2:     -999     -999  29880                                             <NA>          <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>
 3:     -999     -999  49650  49560                                      <NA>          <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>
 4:     -999     -999  52234                                             <NA>          <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>
 5:     -999     -999  37224                                             <NA>          <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>
 6:     -999     -999  52235                                             <NA>          <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>
     CPT17  CPT18  CPT19  CPT20  CPT21  CPT22  CPT23  CPT24  CPT25  CPT26  CPT27  CPT28  CPT29  CPT30 I10_NDX I10_DX1 I10_DX2 I10_DX3
    <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr> <fctr>  <fctr>  <fctr>  <fctr>  <fctr>
 1:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>       4   M1711     I10   E7800
 2:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>       8 S83271A S83231A     I10
 3:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>       8   K4090    K439    K660
 4:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>      19    C672    N210  N35911
 5:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>      14  I70312    I110    I509
 6:   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>   <NA>       8    C679   I2510  Z79899
    I10_DX4 I10_DX5 I10_DX6 I10_DX7 I10_DX8 I10_DX9 I10_DX10 I10_DX11 I10_DX12 I10_DX13 I10_DX14 I10_DX15 I10_DX16 I10_DX17 I10_DX18
     <fctr>  <fctr>  <fctr>  <fctr>  <fctr>  <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>   <fctr>
 1:    E039                                                                                                                         
 2:    E785  Z87891    Y939 X58XXXA    Y929                                                                                         
 3:    N400    E785    I129    N189  Z87891                                                                                         
 4:   E7800     I10    K219    E119     R42   H9190     F419     F329    Z8546     Z923     Z880     Z885   Z87891    Z7984   Z85830
 5:   E1151    E785   Z9841   E7800   Z9842    Z952    Z7901    Z7984    Z7982     Z961   Z90710                                    
 6:   Z7982    E785     I10   Z8546    Z880                                                                                         
    I10_DX19 I10_DX20   RACE I10_INJURY I10_MULTINJURY CMR_AIDS CMR_ALCOHOL CMR_AUTOIMMUNE CMR_CANCER_LYMPH CMR_CANCER_LEUK
      <fctr>   <fctr> <fctr>     <fctr>         <fctr>   <fctr>      <fctr>         <fctr>           <fctr>          <fctr>
 1:                        4          0              0        0           0              0                0               0
 2:                        3          1              1        0           0              0                0               0
 3:                        1          0              0        0           0              0                0               0
 4:     N320               1          0              0        0           0              0                0               0
 5:                        1          0              0        0           0              0                0               0
 6:                        1          0              0        0           0              0                0               0
    CMR_CANCER_METS CMR_CANCER_NSITU CMR_CANCER_SOLID CMR_DEMENTIA CMR_DEPRESS CMR_DIAB_UNCX CMR_DIAB_CX CMR_DRUG_ABUSE CMR_HTN_CX
             <fctr>           <fctr>           <fctr>       <fctr>      <fctr>        <fctr>      <fctr>         <fctr>     <fctr>
 1:               0                0                0            0           0             0           0              0          0
 2:               0                0                0            0           0             0           0              0          0
 3:               0                0                0            0           0             0           0              0          1
 4:               0                0                0            0           1             1           0              0          0
 5:               0                0                0            0           0             0           1              0          1
 6:               0                0                0            0           0             0           0              0          0
    CMR_HTN_UNCX CMR_LUNG_CHRONIC CMR_OBESE CMR_PERIVASC CMR_THYROID_HYPO CMR_THYROID_OTH CMR_VERSION DXCCSR_Default_DX1
          <fctr>           <fctr>    <fctr>       <fctr>           <fctr>          <fctr>      <fctr>             <fctr>
 1:            1                0         0            0                1               0      2022.1             MUS006
 2:            1                0         0            0                0               0      2022.1             INJ024
 3:            0                0         0            0                0               0      2022.1             DIG010
 4:            1                0         0            0                0               0      2022.1             NEO043
 5:            0                0         0            0                0               0      2022.1             CIR026
 6:            1                0         0            0                0               0      2022.1             NEO043
 [ reached getOption("max.print") -- omitted 4 rows ]
> subset_65_50_NASS_2020 <- subset_65_50_NASS_2020[
+     TOTCHG > 1000 & TOTCHG < 1000000 & AGE > 64 & CPT1 %in%   
+         names(sort(table(CPTCCS1), decreasing = TRUE)[1:50]),  #### Change 50 to whichever top, max 79
+     .SD, .SDcols = 1:27, 57, 87:132] 
Error: When by and keyby are both provided, keyby must be TRUE or FALSE
> subset_65_50_NASS_2020 <- subset_65_50_NASS_2020[
+     TOTCHG > 1000 & TOTCHG < 1000000 & AGE > 64 & CPT1 %in%   
+         names(sort(table(CPTCCS1), decreasing = TRUE)[1:50]),
+     .SD, .SDcols = 1:27, 57, 87:132] 
Error: When by and keyby are both provided, keyby must be TRUE or FALSE
> subset_65_50_NASS_2020 <- subset_65_50_NASS_2020[
+     TOTCHG > 1000 & TOTCHG < 1000000 & AGE > 64 & CPTCCS1 %in%   
+         names(sort(table(CPTCCS1), decreasing = TRUE)[1:50]),
+     .SD, .SDcols = 1:27, 57, 87:132] 
Error: When by and keyby are both provided, keyby must be TRUE or FALSE
> # Create an AGE, TOTCHG and CPTCCS1 subset data.table of NASS_2020_all for analysis
> # Remove unnecessary CPT and CCSR columns
> subset_65_50_NASS_2020 <- subset_65_50_NASS_2020[
+     TOTCHG > 1000 & TOTCHG < 1000000 & AGE > 64 & CPTCCS1 %in%   
+         names(sort(table(CPTCCS1), decreasing = TRUE)[1:50]),  #### Change 50 to whichever top, max 79
+     .SD, .SDcols = c(1:27, 57, 87:132)]  
> colnames(subset_65_50_NASS_2020)
 [1] "KEY_NASS"            "HOSP_NASS"           "HOSP_TEACH"          "HOSP_LOCATION"       "HOSP_LOCTEACH"      
 [6] "HOSP_REGION"         "HOSP_BEDSIZE_CAT"    "DISCWT"              "NASS_STRATUM"        "N_DISC_U"           
[11] "N_HOSP_U"            "S_DISC_U"            "S_HOSP_U"            "TOTAL_AS_ENCOUNTERS" "YEAR"               
[16] "AGE"                 "FEMALE"              "PL_NCHS"             "ZIPINC_QRTL"         "AMONTH"             
[21] "AWEEKEND"            "DQTR"                "PAY1"                "DISPUNIFORM"         "TOTCHG"             
[26] "NCPT_INSCOPE"        "CPTCCS1"             "CPT1"                "I10_NDX"             "I10_DX1"            
[31] "I10_DX2"             "I10_DX3"             "I10_DX4"             "I10_DX5"             "I10_DX6"            
[36] "I10_DX7"             "I10_DX8"             "I10_DX9"             "I10_DX10"            "I10_DX11"           
[41] "I10_DX12"            "I10_DX13"            "I10_DX14"            "I10_DX15"            "I10_DX16"           
[46] "I10_DX17"            "I10_DX18"            "I10_DX19"            "I10_DX20"            "RACE"               
[51] "I10_INJURY"          "I10_MULTINJURY"      "CMR_AIDS"            "CMR_ALCOHOL"         "CMR_AUTOIMMUNE"     
[56] "CMR_CANCER_LYMPH"    "CMR_CANCER_LEUK"     "CMR_CANCER_METS"     "CMR_CANCER_NSITU"    "CMR_CANCER_SOLID"   
[61] "CMR_DEMENTIA"        "CMR_DEPRESS"         "CMR_DIAB_UNCX"       "CMR_DIAB_CX"         "CMR_DRUG_ABUSE"     
[66] "CMR_HTN_CX"          "CMR_HTN_UNCX"        "CMR_LUNG_CHRONIC"    "CMR_OBESE"           "CMR_PERIVASC"       
[71] "CMR_THYROID_HYPO"    "CMR_THYROID_OTH"     "CMR_VERSION"         "DXCCSR_Default_DX1" 
> dim(subset_65_50_NASS_2020)
[1] 2495043      74
> gc()
             used    (Mb) gc trigger    (Mb)   max used    (Mb)
Ncells   13837076   739.0   26229852  1400.9   26229852  1400.9
Vcells 3103567345 23678.4 6906672628 52693.8 6906507689 52692.5
> 
> install.packages(comorbidity)
Error in install.packages : object 'comorbidity' not found
> install.packages("comorbidity")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/laure/AppData/Local/R/win-library/4.4’
(as ‘lib’ is unspecified)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.4/comorbidity_1.1.0.zip'
Content type 'application/zip' length 2466952 bytes (2.4 MB)
downloaded 2.4 MB

package ‘comorbidity’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\laure\AppData\Local\Temp\RtmpOwDvEW\downloaded_packages
> library(comorbidity)
Warning message:
package ‘comorbidity’ was built under R version 4.4.2 